#!/usr/bin/env bash
# create_aws.replica.sh
#
# 
# a set of scripts runnable on an external computer, doing the ec2-tools 
# spells needed to make a suitable replica of a running mwiki1.4 instance
# uses temp-storage multiple times because ec2-calls tend to be a bit slow
source configs.conf

# read the relevant information from the original instance to make a replica
echo "Reading running-instance data..."
ec2-describe-instances $aws_instance |tee tempfile2.txt
aws_key_name=$(sed -n '2p' tempfile2.txt|cut -f7)
aws_instance_type=$(sed -n '2p' tempfile2.txt|cut -f10)
aws_instance_name=$(sed -n '4p' tempfile2.txt|cut -f5)
aws_security_group=$(sed -n '1p' tempfile2.txt|cut -f4)
aws_availability_zone=$(sed -n '2p' tempfile2.txt|cut -f12)
aws_original_hostname=$(sed -n '2p' tempfile2.txt|cut -f4)
#TODO: This data can be dynamically generated to configs.conf copied to the parallel-universe computer

rm tempfile2.txt

echo "Creating AMI from running-instance..."
# this actually reboots the instance in question :(
ec2-create-image $aws_instance -n "MWiki14_replicated_$(date +%s)" -d "An image generated by create_aws_replica.sh" |tee tempfile3.txt
aws_replica_image=$(cat tempfile3.txt |cut -f2)
rm tempfile3.txt
echo "Booting original instance..."
echo "Building image..."
#here, we need some pause until the image is available. (!= PENDING)
sleep 60	# TODO: Replace with a loop checking for image-availability

#then create a new instance
echo "Creating new instance..."
ec2-run-instances -z$aws_availability_zone -k$aws_key_name -t$aws_instance_type -g$aws_security_group $aws_replica_image |tee tempfile4.txt
aws_replica_instance=$(sed -n '2p' tempfile4.txt|cut -f2)
ec2-create-tags $aws_replica_instance --tag Name=$aws_instance_name-pupgrade_mw15
rm tempfile4.txt

echo "Booting new instance..."
#need to wait a while for the new instance to start
sleep 60
ec2-describe-instances $aws_replica_instance |tee tempfile5.txt
aws_replica_hostname=$(sed -n '2p' tempfile5.txt|cut -f4)
rm tempfile5.txt

echo "Cleaning up generated AWS-AMI..."
ec2-deregister $aws_replica_image

echo "Generating a new configuration-file for replica..."
cat configs.conf > configs.replica
echo "aws_original_hostname=$aws_original_hostname" >> configs.replica
echo "aws_replica_instance=$aws_replica_instance" >> configs.replica
echo "aws_replica_hostname=$aws_replica_hostname" >> configs.replica

echo "DONE! wrote configs.replica"
echo "now, start the next phase with command:"
echo "$ bash setup_replica.sh"


